#!/usr/bin/env python3
"""
ðŸŽª Test ekstremalnych stylÃ³w gÅ‚osÃ³w
"""

import asyncio
import edge_tts
from pathlib import Path

# Ekstremalne style
EXTREME_STYLES = {
    "normalny": ("+0%", "+0Hz"),
    "robot": ("-25%", "-12Hz"),
    "wiewiorka": ("+80%", "+20Hz"),
    "gigant": ("-40%", "-20Hz"),
    "duch": ("-30%", "+15Hz"),
    "dziecko": ("+50%", "+25Hz"),
    "turbo": ("+100%", "+5Hz"),
}

async def test_styles():
    """Testuj wszystkie style z tym samym tekstem"""
    
    text = "CzeÅ›Ä‡! To jest test ekstremalnych stylÃ³w gÅ‚osu. Czy sÅ‚yszysz rÃ³Å¼nicÄ™?"
    voice = "pl-PL-MarekNeural"
    
    print("ðŸŽª TESTOWANIE EKSTREMALNYCH STYLÃ“W")
    print("=" * 50)
    
    for style_name, (rate, pitch) in EXTREME_STYLES.items():
        print(f"\nðŸŽ¤ GenerujÄ™ styl: {style_name} (rate={rate}, pitch={pitch})")
        
        communicate = edge_tts.Communicate(text, voice, rate=rate, pitch=pitch)
        filename = f"output/test_{style_name}.mp3"
        await communicate.save(filename)
        print(f"âœ… Zapisano: {filename}")
    
    print("\n\nðŸ“Š PORÃ“WNANIE STYLÃ“W:")
    print("-" * 50)
    print("STYL         | PRÄ˜DKOÅšÄ† | WYSOKOÅšÄ† | EFEKT")
    print("-" * 50)
    print("Normalny     |    0%    |    0Hz   | Bazowy gÅ‚os")
    print("Robot        |  -25%    |  -12Hz   | Mechaniczny, gÅ‚Ä™boki")
    print("WiewiÃ³rka    |  +80%    |  +20Hz   | SUPER szybki i wysoki")
    print("Gigant       |  -40%    |  -20Hz   | MEGA wolny i niski")
    print("Duch         |  -30%    |  +15Hz   | Wolny ale wysoki (upiorny)")
    print("Dziecko      |  +50%    |  +25Hz   | Bardzo wysoki i szybki")
    print("Turbo        | +100%    |   +5Hz   | ULTRA szybki")
    
    print("\nðŸŽ§ OdsÅ‚uchaj pliki w kolejnoÅ›ci Å¼eby usÅ‚yszeÄ‡ rÃ³Å¼nice!")
    print("\nPROTIP: Najlepsze efekty:")
    print("  â€¢ WiewiÃ³rka vs Gigant - totalnie rÃ³Å¼ne!")
    print("  â€¢ Robot vs Dziecko - mechaniczny vs sÅ‚odki")
    print("  â€¢ Duch - upiorny efekt (wolny ale wysoki)")

if __name__ == "__main__":
    Path("output").mkdir(exist_ok=True)
    asyncio.run(test_styles())